# This config uses industrial_ci (https://github.com/ros-industrial/industrial_ci.git).
# For troubleshooting, see readme (https://github.com/ros-industrial/industrial_ci/blob/master/README.rst)

name: BuildAndTest

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - kmn*-devel

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          - IMAGE: 'melodic-ci'
            BEFORE_TARGET_TEST_EMBED: 'set +u && source moveit_kinematics/test/test_ikfast_plugins.sh && set -u'
    env:
      DOCKER_IMAGE: moveit/moveit:${{ matrix.env.IMAGE }}
      UPSTREAM_WORKSPACE: moveit.rosinstall
      AFTER_SETUP_UPSTREAM_WORKSPACE: 'vcs pull $BASEDIR/upstream_ws/src'
      AFTER_INSTALL_TARGET_DEPENDENCIES: 'df -h && apt-get clean && rm -rf /var/lib/apt/lists/* && df -h'
      TARGET_CMAKE_ARGS: >
        -DCMAKE_BUILD_TYPE=${{ matrix.env.CCOV && 'RelWithDebInfo' || 'Release'}}
        ${{ matrix.env.CCOV && '-DCMAKE_CXX_FLAGS="--coverage" --no-warn-unused-cli' || '' }}
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
      BASEDIR: ${{ github.workspace }}/.work
      CACHE_PREFIX: "${{ matrix.env.DOCKER_IMAGE }}${{ matrix.env.CCOV && '-ccov' || '' }}"

    name: "${{ matrix.env.IMAGE }}${{ matrix.env.CATKIN_LINT && ' + catkin_lint' || ''}}${{ matrix.env.CCOV && ' + ccov' || ''}}${{ contains(matrix.env.BEFORE_TARGET_TEST_EMBED, 'ikfast') && ' + ikfast' || ''}}"
    runs-on: ubuntu-latest
    steps:
      # Workaround for https://github.com/actions/virtual-environments/issues/709
      - name: "Free up disk space"
        run: |
          echo "*** BEFORE ***"
          df -h
          mount | grep /dev/sd
          #sudo apt-get -qq purge build-essential
          #sudo apt-get clean
          sudo ls -alR /mnt
          docker system prune -af
          sudo systemctl stop docker
          sudo ls -alR /usr/local
          sudo ls -alR /opt
          # sudo mount --bind /mnt /var/lib/docker
          sudo systemctl start docker
          echo "*** AFTER ***"
          df -h
      - uses: actions/checkout@v2
      - name: cache upstream_ws
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.BASEDIR }}/upstream_ws
          key: upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('moveit.rosinstall') }}-${{ github.run_id }}
          restore-keys: |
            upstream_ws-${{ env.CACHE_PREFIX }}-${{ hashFiles('moveit.rosinstall') }}
      - name: cache ccache
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ env.CACHE_PREFIX }}-${{ github.sha }}
            ccache-${{ env.CACHE_PREFIX }}
      - name: upload test artifacts (on failure)
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: ${{ env.BASEDIR }}/target_ws/**/test_results/**/*.xml
      - name: upload codecov report
        uses: codecov/codecov-action@v1
        if: ${{ env.CCOV }}
        with:
          files: ${{ env.BASEDIR }}/coverage.info
